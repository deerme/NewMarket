package database;

import model.Execution;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.support.GeneratedKeyHolder;
import org.springframework.jdbc.support.KeyHolder;
import javax.sql.DataSource;
import java.sql.PreparedStatement;
import java.util.List;

/**
 * Created by PBanasiak on 3/21/2016.
 */
public class ExecutionDAOImpl implements ExecutionDAO {
    private JdbcTemplate jdbcTemplate;
    private Logger logger = LoggerFactory.getLogger("auditLogger");

    public ExecutionDAOImpl(DataSource dataSource) {
        this.jdbcTemplate = new JdbcTemplate(dataSource);
    }

    public int addExecutionToDatabaseAndReturnAutoGeneratedKey(final int idBuyer, final int idSeller, final int quantity) {
        final String sqlInsertExecutionToDatabase = "INSERT INTO EXECUTION(QUANTITY,ID_ORDER_SELLER,ID_ORDER_BUYER) VALUES(?,?,?);";

        KeyHolder keyHolder = new GeneratedKeyHolder();
        this.jdbcTemplate.update(
                connection -> {
                    PreparedStatement ps =
                            connection.prepareStatement(sqlInsertExecutionToDatabase);
                    ps.setInt(1, quantity);
                    ps.setInt(2, idSeller);
                    ps.setInt(3, idBuyer);

                    return ps;
                },
                keyHolder);
        int autoGeneratedIdOfExecution = keyHolder.getKey().intValue();
        logger.info("Added order to database.Auto-generated id:" + autoGeneratedIdOfExecution + " Quantity of order: " +quantity + " Id seller: " + idSeller +" Id buyer: "+idBuyer);
        return autoGeneratedIdOfExecution;
    }

    public List<Execution> getAllExecutions(){
        return  this.jdbcTemplate.query("SELECT * FROM EXECUTION",
                (rs, rowNum) -> new Execution.ExecutionBuilder(rs.getInt("quantity")).idBuyer(rs.getInt("id_order_buyer")).idSeller(rs.getInt("id_order_seller")).id(rs.getInt("id")).build());
    }
}
