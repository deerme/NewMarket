package service;

import database.ExecutionDAO;
import database.ExecutionDAOImpl;
import model.Execution;
import model.Order;
import org.apache.camel.EndpointInject;
import org.apache.camel.Produce;
import org.apache.camel.ProducerTemplate;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.support.KeyHolder;
import javax.jms.JMSException;


/**
 * Created by PBanasiak on 3/24/2016.
 */
public class ExecutionManager {
    private ExecutionDAO executionDAO;
    private static final Logger logger = LoggerFactory.getLogger(ExecutionManager.class);
    private static final Logger auditLogger = LoggerFactory.getLogger("auditLogger");

  //  @EndpointInject(uri="jms:dead")
   // @Produce(uri="jms:dead")
    @Autowired
    private ProducerTemplate producerTemplate;

    public ExecutionManager(ExecutionDAO executionDAO) {
        this.executionDAO = executionDAO;
    }

    public void setExecutionDAO(ExecutionDAOImpl executionDAO) {
        this.executionDAO = executionDAO;
    }

    public void createExecution(Order sellOrder, Order buyOrder) throws JMSException {
        KeyHolder keyWithIdOfExecution = executionDAO.addExecutionToDatabaseAndReturnAutoGeneratedKey(buyOrder.getId(),sellOrder.getId(),Math.min(sellOrder.getQuantity (),buyOrder.getQuantity ()));


        Execution execution = new Execution(buyOrder.getId(), sellOrder.getId(), keyWithIdOfExecution.getKey().intValue() , buyOrder.getQuantity());
        auditLogger.info("Added execution to database with: Id of execution:" + execution.getId() + "Id of buyer: "+ execution.getIdBuyer() + "Id of seller: " + execution.getIdSeller() + "quantity of execution" + execution.getQuantityOfExecution());
        sendMessageAboutExecutionToQueueWithAllDoneExecutions(execution);
    }


    public void sendMessageAboutExecutionToQueueWithAllDoneExecutions(Execution execution) throws JMSException {
        producerTemplate.sendBody("jms:executionsInformationQueue",createMessageAboutExecution(execution));
        logger.debug ("sended message to queue"+"exec_id"+execution.getId()+"sell_id"+execution.getIdSeller()+"buy_id+"+execution.getIdBuyer()+"qty"+execution.getQuantityOfExecution());
    }

    private String createMessageAboutExecution(Execution execution){
        return new StringBuilder()
                .append("exec_id")
                .append(execution.getId())
                .append("sell_id")
                .append(execution.getIdSeller())
                .append("buy_id")
                .append(execution.getIdBuyer())
                .append("qty")
                .append(execution.getQuantityOfExecution())
                .toString();
    }



}
