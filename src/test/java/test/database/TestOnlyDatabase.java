package test.database;

import bean.test.configuration.BeanTestConfiguration;
import database.ExecutionDAO;
import database.OrderDAO;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.support.AnnotationConfigContextLoader;
import org.springframework.test.jdbc.JdbcTestUtils;
import javax.jms.JMSException;
import javax.sql.DataSource;
import static org.junit.Assert.assertEquals;

/**
 * Created by pizmak on 2016-05-16.
 */
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(classes = BeanTestConfiguration.class, loader = AnnotationConfigContextLoader.class)
public class TestOnlyDatabase {
    @Autowired
    @Qualifier("testDataSource")
    private DataSource datasource;
    private JdbcTemplate jdbcTemplate;

    @Autowired
    @Qualifier("testOrderDAO")
    private OrderDAO orderDAO;

    @Autowired
    @Qualifier("testExecutionDAO")
    private ExecutionDAO executionDAO;


    private static final String NAME_OF_TABLE_WITH_EXECUTIONS = "execution";
    private static final String NAME_OF_TABLE_WITH_ORDERS = "orderinmarket";

    @Before
    public void initJdbcTemplate(){
        jdbcTemplate = new JdbcTemplate(datasource);
    }

    @Test
    public void testDatabaseShouldReturnNoRows() throws JMSException {
        JdbcTestUtils.deleteFromTables (jdbcTemplate,NAME_OF_TABLE_WITH_EXECUTIONS,NAME_OF_TABLE_WITH_ORDERS);
        assertEquals (0,JdbcTestUtils.countRowsInTable (jdbcTemplate,NAME_OF_TABLE_WITH_ORDERS));
    }

    @Test
    public void testInsertingOrderToDatabaseShouldReturnOneMoreRowFromOrderTable(){
        int rowsInOrderTableBeforeInsertion = JdbcTestUtils.countRowsInTable (jdbcTemplate,NAME_OF_TABLE_WITH_ORDERS);
        orderDAO.addOrderToDatabase ("BUY",300);
        assertEquals (rowsInOrderTableBeforeInsertion+1,JdbcTestUtils.countRowsInTable (jdbcTemplate,NAME_OF_TABLE_WITH_ORDERS));
    }

    @Test
    public void testInsertingExecutionToDatabaseShouldReturnOneMoreRowFromExecutionTable(){
        int rowsInExecutionTableBeforeInsertion = JdbcTestUtils.countRowsInTable (jdbcTemplate,NAME_OF_TABLE_WITH_EXECUTIONS);

        int idOfBuyer = orderDAO.addOrderToDatabase ("BUY",200);
        int idOfSeller = orderDAO.addOrderToDatabase("SELL",100);
        executionDAO.addExecutionToDatabaseAndReturnAutoGeneratedKey(idOfBuyer,idOfSeller,100);
        assertEquals (rowsInExecutionTableBeforeInsertion+1,JdbcTestUtils.countRowsInTable (jdbcTemplate,NAME_OF_TABLE_WITH_EXECUTIONS));

    }
}
